#https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html
# https://aws.amazon.com/premiumsupport/knowledge-center/instance-vpc-troubleshoot/


Parameters:
    EnvironmentName:
        Description: Single Parameter that we are passing with the env name.
        Type: String

Resources:

   


           
            
            
    

    LBSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow traffic on port 80 coming from Load Balancers
            VpcId:
                Fn::ImportValue:
                    !Sub ${EnvironmentName}-VPCID

            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

                  


    WebServerSecGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow inbound http traffic
            VpcId: 
                Fn::ImportValue:
                    !Sub ${EnvironmentName}-VPCID
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0


            SecurityGroupEgress:
                - IpProtocol: tcp
                  FromPort: 0
                  ToPort: 65535
                  CidrIp: 0.0.0.0/0

 
    
    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
            UserData: !Base64
                'Fn::Sub': |
                    #!/bin/sh
                    apt-get update -y
                    apt-get install -y apache2
                    apt install -y  awscli
                    aws s3 cp s3://cdend-udagram/udacity.zip /home/ubuntu/
                    cd /var/www/html
                   
                    systemctl start apache2.service

            ImageId: ami-0d1cd67c26f5fca19
            IamInstanceProfile: AZ-S3-Read-Only
            InstanceType: t2.medium
            KeyName: udagram-priv
            BlockDeviceMappings:
                - DeviceName: "/dev/sdk"
                  Ebs:
                    VolumeSize: '10'
            SecurityGroups:
                - Ref: WebServerSecGroup
    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier: 
            - Fn::ImportValue: 
                    !Sub "${EnvironmentName}-PRIV-NETS"
            LaunchConfigurationName: 
                Ref:  WebAppLaunchConfig
            MinSize: '1'
            MaxSize: '2'
            TargetGroupARNs:
                - Ref: WebAppTargetGroup






            
           
          
    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Subnets:
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB1-SN"
          - Fn::ImportValue: !Sub "${EnvironmentName}-PUB2-SN"
          SecurityGroups:
          - Ref: LBSecGroup
      
          

   
    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            DefaultActions:
                - Type: forward
                  TargetGroupArn:
                      Ref: WebAppTargetGroup
            LoadBalancerArn:
                Ref: WebAppLB
            Port: '80'
            Protocol: HTTP

    

    ALBListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WebAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1

    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            HealthCheckIntervalSeconds: 10
            HealthCheckPath: "/"
            HealthCheckPort: 80
            HealthCheckTimeoutSeconds: 8
            HealthyThresholdCount: 2
            Port: 80
            Protocol: HTTP
            UnhealthyThresholdCount: 5
            VpcId:
                Fn::ImportValue:
                    Fn::Sub: "${EnvironmentName}-VPCID"
                           
        